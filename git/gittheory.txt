Source Control Management (SCM) : 
    Git

1. Используется для отслеживания изменений
2. CI получает код из SCM
3. SCM уведомляет CI сервер о налчинии нового кода

GIT: 
    clon            планирование (скачивание из удаленного репа в свой локальный)
    add             добавление (индексирование изменений)
    commit          коммит (фиксирование добавлений)
    push            отправление в удаленный репозиторий 
    branch          создание ветвей
    merg            слияние (обьединение) ветвей
    pull request    предложение изменений в ветку

#clone rep
git clone <repository url>
    1. Клонирование репозитория по url or ssh

#without rep
git init


#status нашего репозитория локального
git status
    1. Просмотр не проиндексированных (staged)  для commit 
    2. Не добавленные в commit но уже индексированные
    3. Просмотр ветки


#индексирование (staged)
git add <file>
git add .
git add -A
    1. Перед каждым коммитом надо проиндексировать (staged)


#фиксирование
git commit -m "<message desctibing the change (#019213)>"
    1. Работает только с локальной копией вашего репа и вносит изменения только в ней
    2. commit работает только на файлах, которые были проиндексированы (staged)

#отмена последнего коммита
git reset --hard HEAD~1
git push -f
    1. Удаляет последний коммит
    2. фиксирует изменения принудительно (обязательно для изменения удаленного репозитеория)

#изменение последенго коммита
git commit --amend
    1. Изменяет (обновляет) последений коммит


#добавление к удаленный репа
git push
git push -u <remote name, origin*> <branch name>
    1. Перенесение изменнений из локальной в удаленный
    2. Загрузка на удаленный реп ассоциированный с текущей локальной веткой


#просмотр веток
git branch

#перекллючение между ветками
git checkout <branch name>
git checkout -b <branch name> #создание и пересносится туда
    1. другой вариант смещение укащателя HEAD, туда куда смотрит наша локальная копия для возрващения в прошлой для изменнеия коммита или создания ветки


#логи
git log

#tags
git tag
Простые указатели для возрващения и Просмотра коммита в будущем (версия ПО: "v1.0.0")

#Pull request
    1. Не явлется частью git
    2. Управление многочисленными изменниями для обьединение веток 
        а) Либо локально обьединять ветки
        б) либо pull request (Такой то товариищ запросил обьединение, а хозяин решает есть ли смысл)


